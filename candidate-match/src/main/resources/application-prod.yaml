spring:
  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST}:5432/candidatematch
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 10000
      idle-timeout: 300000
      max-lifetime: 1200000
      validation-timeout: 5000
  liquibase:
    change-log: classpath:/db/changelog/db.changelog-master.xml
    enabled: true
    contexts: "default,pgvector"

# Make external services optional
flowcase:
  apiKey: ${FLOWCASE_API_KEY}
  baseUrl: ${FLOWCASE_BASE_URL}

openai:
  apiKey: ${OPENAI_API_KEY}
  model: gpt-5
  assistantId: ${OPENAI_ASSISTANT_ID}

gemini:
  apiKey: ${GEMINI_API_KEY}
  model: gemini-2.5-pro

embedding:
  enabled: true
  provider: GEMINI
  model: text-embedding-004
  dimension: 768

ai:
  ollama:
    base-url: http://localhost:11434
    model: llama3.2:1b
  provider: GEMINI
  models:
    interpretation: gemini-2.5-flash
    generation_default: gemini-2.5-flash
    generation_quality: gemini-2.5-pro
    embeddings: text-embedding-004
  timeouts:
    interpretation: 1500  # 1.5s for fast query classification
    generation: 3000     # 3s for answer generation
    retrieval: 150       # 150ms for vector retrieval
  rag:
    enabled: true
    chunk_size: 700
    chunk_overlap: 100
    top_k_chunks: 8
  semantic:
    enabled: true
  hybrid:
    enabled: true
    semantic_weight: 0.7
    quality_weight: 0.3
  streaming:
    enabled: false  # Enable later when UI supports it

search:
  lexicon:
    public-sector-tokens: ["kommune","etat","nav","skatt","stat","offentlig","departement","direktorat","helsedirektoratet","kartverket","politiet","helse","utdanningsdirektoratet"]
    customer-synonyms:
      sparebank1: ["sparebank 1","sb1"]
      dnb: ["den norske bank","d.n.b"]
      nav: ["arbeids- og velferdsetaten"]
  ollama:
    base-url: http://localhost:11434
    model: llama3.2:1b
    connect-timeout-seconds: 5
    read-timeout-seconds: 120
    write-timeout-seconds: 10
projectrequest:
  analysis:
    ai-enabled: true
    provider: GEMINI
sync:
  consultants:
    on-startup: true

management:
  endpoints:
    web:
      exposure:
        include: "health"
  endpoint:
    health:
      probes:
        enabled: true
      show-details: always
  health:
    # Make health check less strict
    group:
      readiness:
        include: "readinessState,dependencies"

logging:
  level:
    no.cloudberries.candidatematch: INFO # Setter DEBUG-logging for din kode