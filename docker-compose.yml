version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: cloudberries-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: candidatematch
      POSTGRES_USER: candidatematch
      POSTGRES_PASSWORD: candidatematch123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U candidatematch -d candidatematch"]
      interval: 30s
      timeout: 10s
      retries: 3

  app:
    build: .
    container_name: cloudberries-app
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/candidatematch
      - SPRING_DATASOURCE_USERNAME=candidatematch
      - SPRING_DATASOURCE_PASSWORD=candidatematch123
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - FLOWCASE_API_KEY=${FLOWCASE_API_KEY}
      - FLOWCASE_BASE_URL=${FLOWCASE_BASE_URL}
      - OPENAI_API-KEY=${OPENAI_API_KEY}
      - OPENAI_ASSISTANT-ID=${OPENAI_ASSISTANT_ID}
      - GEMINI_API-KEY=${GEMINI_API_KEY}

volumes:
  postgres_data:
    driver: local
