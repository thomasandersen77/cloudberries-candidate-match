# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    # This includes 'main', all 'feature/*' branches, and any other branch you create.
    branches: [ "**" ]
  pull_request:
    # Run the workflow when a pull request is opened or updated
    # that targets the 'main' branch, acting as a quality check before merging.
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

  code-review:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    permissions:
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get PR diff
        id: diff
        run: |
          PR_DIFF=$(git diff ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }})
          echo "diff_content<<EOF" >> $GITHUB_OUTPUT
          echo "$PR_DIFF" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Call Gemini for review
        id: review
        run: |
          echo "--- Diff content sent to Gemini ---"
          echo "${{ steps.diff.outputs.diff_content }}"
          echo "-------------------------------------"
          
          PROMPT_TEXT="Du er en ekspert p친 programvareutvikling med spesialkunnskap innen Domain-Driven Design, SOLID-prinsippene og Clean Code. Gjennomg친 f칮lgende kodeendringer fra en pull request. Gi konstruktiv og presis tilbakemelding basert p친 prinsipper som SRP, Meaningful Naming, sm친 funksjoner, og unng친else av Anemic Domain Models. Formater svaret i Markdown. Hvis det ikke er noen endringer, svar med 'Ingen kodeendringer 친 vurdere.'. Her er kodeendringene:\n\n\`\`\`diff\n${{ steps.diff.outputs.diff_content }}\n\`\`\`"
          
          JSON_PAYLOAD=$(jq -n --arg content "$PROMPT_TEXT" \
            '{ "contents": [ { "parts": [ { "text": $content } ] } ] }')
          
          GEMINI_RESPONSE=$(curl -s -X POST "https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest:generateContent?key=${{ secrets.GEMINI_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d "$JSON_PAYLOAD")
          
          echo "--- Raw Gemini Response ---"
          echo "$GEMINI_RESPONSE"
          echo "---------------------------"
          
          REVIEW_COMMENT=$(echo "$GEMINI_RESPONSE" | jq -r '.candidates[0].content.parts[0].text')
          
          echo "--- Parsed Review Comment ---"
          echo "$REVIEW_COMMENT"
          echo "-----------------------------"
          
          echo "comment<<EOF" >> $GITHUB_OUTPUT
          echo "$REVIEW_COMMENT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Post review comment to PR
        uses: actions/github-script@v6
        with:
          script: |
            const body = `### 游뱄 Gemini Code Review\n\n${{ steps.review.outputs.comment }}`;
            console.log("--- Comment to be posted ---");
            console.log(body);
            console.log("----------------------------");
            if ("${{ steps.review.outputs.comment }}".trim() !== "Ingen kodeendringer 친 vurdere." && "${{ steps.review.outputs.comment }}".trim() !== "") {
              github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            } else {
              console.log("Skipping comment post because the review comment is empty or contains no suggestions.");
            }