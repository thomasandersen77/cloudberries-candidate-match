# .github/workflows/maven.yml

name: Java CI with Maven and Gemini PR Review

on:
  workflow_dispatch:
  pull_request:
    # Kj√∏rer kun n√•r en pull request mot main opprettes eller oppdateres
    branches: [ "main" ]
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: candidate-match
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Build and Test with Maven
        run: mvn -B verify

  review:
    name: Perform Gemini Code Reviews
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      pull-requests: write
    defaults:
      run:
        working-directory: candidate-match
    strategy:
      matrix:
        review_type: [architecture, security, readability]
        include:
          - review_type: architecture
            prompt_file: .github/prompts/architecture_review_prompt.txt
            output_file: gemini_review_arch.txt
          - review_type: security
            prompt_file: .github/prompts/security_review_prompt.txt
            output_file: gemini_review_sec.txt
          - review_type: readability
            prompt_file: .github/prompts/readability_review_prompt.txt
            output_file: gemini_review_readability.txt
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run ${{ matrix.review_type }} review
        uses: ./.github/actions/gemini-review
        with:
          review_type: ${{ matrix.review_type }}
          prompt_file: ${{ matrix.prompt_file }}
          output_file: ${{ matrix.output_file }}
          gemini_api_key: ${{ secrets.GEMINI_API_KEY }}

      - name: Post ${{ matrix.review_type }} review comment
        if: ${{ success() && github.event_name == 'pull_request' }}
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            const reviewPath = path.join(process.env.GITHUB_WORKSPACE, 'candidate-match', '${{ matrix.output_file }}');
            if (!fs.existsSync(reviewPath)) {
              core.info('Review file not found, skipping comment.');
              return;
            }
            const review = fs.readFileSync(reviewPath, 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `### ü§ñ Gemini ${{ matrix.review_type }} Review\n\n${review}`
            });
