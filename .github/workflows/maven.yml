# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    # This includes 'main', all 'feature/*' branches, and any other branch you create.
    branches: [ "**" ]
  pull_request:
    # Run the workflow when a pull request is opened or updated
    # that targets the 'main' branch, acting as a quality check before merging.
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
  code-review:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    # LEGG TIL DENNE BLOKKEN:
    permissions:
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Henter hele historikken for √• kunne sammenligne commits
          fetch-depth: 0

      - name: Get PR diff
        id: diff
        run: |
          # Bruk base og head commit SHAs fra pull request-eventet for en p√•litelig diff
          PR_DIFF=$(git diff ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }})
          
          # For √• h√•ndtere flerrlinje-variabel i GitHub Actions
          echo "diff_content<<EOF" >> $GITHUB_OUTPUT
          echo "$PR_DIFF" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Call Gemini for review
        # ... (resten av steget forblir det samme)
        id: review
        run: |
          # ...

      - name: Post review comment to PR
        # ... (dette steget forblir det samme)
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `### ü§ñ Gemini Code Review\n\n${{ steps.review.outputs.comment }}`
            });